{"remainingRequest":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\src\\views\\Camera.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\src\\views\\Camera.vue","mtime":1610388792639},{"path":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport {nativeAlert} from \"../libs/index\";\n\nexport default {\n  name: 'camera',\n  data() {\n    return {\n      imagePath: \"\"\n    }\n  },\n  methods: {\n    // Use the camera plugin to capture image\n    takePicture() {\n      if (navigator.camera) {\n        navigator.camera.getPicture(this.setPicture, this.error, {});\n      }else{\n        // If the navigator.camera is not available display generic error to the user.\n        this.error();\n      }\n    },\n    // Set the picture path in the data of the vue\n    // this action will automatically update the view.\n    setPicture(imagePath){\n      this.imagePath = imagePath;\n    },\n    error(){\n      nativeAlert(this.$t(\"error\"));\n    }\n  }\n}\n",{"version":3,"sources":["Camera.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Camera.vue","sourceRoot":"src/views","sourcesContent":["// Require Cordova plugin : cordova-plugin-camera\r\n\r\n<template>\r\n  <v-container text-center>\r\n    <img v-if='imagePath !== \"\"' :src=\"imagePath\">\r\n    <v-btn @click=\"takePicture\">{{$t(\"takePhoto\")}}</v-btn>\r\n  </v-container>\r\n</template>\r\n<script>\r\n  import {nativeAlert} from \"../libs/index\";\r\n\r\n  export default {\r\n    name: 'camera',\r\n    data() {\r\n      return {\r\n        imagePath: \"\"\r\n      }\r\n    },\r\n    methods: {\r\n      // Use the camera plugin to capture image\r\n      takePicture() {\r\n        if (navigator.camera) {\r\n          navigator.camera.getPicture(this.setPicture, this.error, {});\r\n        }else{\r\n          // If the navigator.camera is not available display generic error to the user.\r\n          this.error();\r\n        }\r\n      },\r\n      // Set the picture path in the data of the vue\r\n      // this action will automatically update the view.\r\n      setPicture(imagePath){\r\n        this.imagePath = imagePath;\r\n      },\r\n      error(){\r\n        nativeAlert(this.$t(\"error\"));\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  img{\r\n    width: 50%;\r\n    display: block;\r\n    margin: auto;\r\n  }\r\n</style>\r\n"]}]}