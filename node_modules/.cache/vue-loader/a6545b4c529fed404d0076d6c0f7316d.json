{"remainingRequest":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\src\\views\\Localisation.vue?vue&type=style&index=0&id=65aeab7a&scoped=true&lang=css&","dependencies":[{"path":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\src\\views\\Localisation.vue","mtime":1610388792644},{"path":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\vue-cordova-app\\vuejs-cordova-sample\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container{\n  padding: 0;\n}\n#map{\n  height: calc(100vh - 50px);\n  width: 100%;\n  z-index: 1;\n}\n\n.loading {\n  position: absolute;\n  width: 150px;\n  height: 150px;\n  bottom: 50vh;\n  top: 50vh;\n  z-index: 200;\n  margin: auto;\n  background-color: white;\n  border-radius: 5px;\n  left: calc(50% - 50px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  padding: 10px;\n}\n",{"version":3,"sources":["Localisation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Localisation.vue","sourceRoot":"src/views","sourcesContent":["// Require Cordova Plugin : cordova-plugin-geolocation\r\n\r\n<template>\r\n  <v-container fill-height fluid>\r\n    <div id=\"map\"></div>\r\n    <loader v-if=\"isLoading\" />\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  import 'leaflet/dist/leaflet.css';\r\n  import L from 'leaflet';\r\n  import {nativeAlert} from \"../libs/\";\r\n  import Loader from \"@/components/Loader\"\r\n\r\n  // Fix for icon problem with webpack\r\n  // See https://github.com/PaulLeCam/react-leaflet/issues/255#issuecomment-261904061\r\n  delete L.Icon.Default.prototype._getIconUrl;\r\n  L.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n  });\r\n\r\n  export default {\r\n    name: 'localisation',\r\n    components: {Loader},\r\n    data() {\r\n      return {\r\n        isLoading: true\r\n      }\r\n    },\r\n    mounted() {\r\n      // Init the leaflet map\r\n      this.map = L.map('map').setView([47.47121, -0.55198], 5);\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(this.map);\r\n      this.getUserLocation();\r\n    },\r\n    beforeDestroy(){\r\n      // Destroy the map object on leave\r\n      if(!(this.map === undefined)){\r\n        this.map.remove();\r\n      }\r\n    },\r\n    methods: {\r\n      stopLoading(){\r\n        this.isLoading = false;\r\n      },\r\n      getUserLocation() {\r\n        // Retrieve the current user location\r\n        if (navigator.geolocation) {\r\n          // If the geolocation is available\r\n          navigator.geolocation.getCurrentPosition((position) => {\r\n            // Get the current user position, and create a marker on the map.\r\n            // Pssst, look at the position object there is a lot of more information\r\n            let user_position = [position.coords.latitude, position.coords.longitude];\r\n            L.marker(user_position).addTo(this.map);\r\n\r\n            // Set the view on the user position at a correct zoom level\r\n            this.map.setView(user_position, 18);\r\n            this.stopLoading();\r\n          }, () => {\r\n            // If the geolocation plugin not answer or if we reach the timeout\r\n            this.stopLoading();\r\n            nativeAlert(this.$t(\"positionNotAvailable\", this.$t(\"localisation\")));\r\n          });\r\n        }else{\r\n          // If the browser is not compatible\r\n          nativeAlert(this.$t(\"positionNotAvailable\", this.$t(\"localisation\")));\r\n          this.stopLoading();\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .container{\r\n    padding: 0;\r\n  }\r\n  #map{\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    z-index: 1;\r\n  }\r\n\r\n  .loading {\r\n    position: absolute;\r\n    width: 150px;\r\n    height: 150px;\r\n    bottom: 50vh;\r\n    top: 50vh;\r\n    z-index: 200;\r\n    margin: auto;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    left: calc(50% - 50px);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    padding: 10px;\r\n  }\r\n</style>\r\n"]}]}